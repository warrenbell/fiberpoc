// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/sandstone2/fiberpoc/common/services (interfaces: FooServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "gitlab.com/sandstone2/fiberpoc/common/models"
)

// MockFooService is a mock of FooServiceInterface interface.
type MockFooService struct {
	ctrl     *gomock.Controller
	recorder *MockFooServiceMockRecorder
}

// MockFooServiceMockRecorder is the mock recorder for MockFooService.
type MockFooServiceMockRecorder struct {
	mock *MockFooService
}

// NewMockFooService creates a new mock instance.
func NewMockFooService(ctrl *gomock.Controller) *MockFooService {
	mock := &MockFooService{ctrl: ctrl}
	mock.recorder = &MockFooServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFooService) EXPECT() *MockFooServiceMockRecorder {
	return m.recorder
}

// CreateFoo mocks base method.
func (m *MockFooService) CreateFoo() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFoo")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFoo indicates an expected call of CreateFoo.
func (mr *MockFooServiceMockRecorder) CreateFoo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFoo", reflect.TypeOf((*MockFooService)(nil).CreateFoo))
}

// DeleteFoos mocks base method.
func (m *MockFooService) DeleteFoos() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFoos")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFoos indicates an expected call of DeleteFoos.
func (mr *MockFooServiceMockRecorder) DeleteFoos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFoos", reflect.TypeOf((*MockFooService)(nil).DeleteFoos))
}

// GetFoos mocks base method.
func (m *MockFooService) GetFoos() (*[]models.Foo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFoos")
	ret0, _ := ret[0].(*[]models.Foo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFoos indicates an expected call of GetFoos.
func (mr *MockFooServiceMockRecorder) GetFoos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFoos", reflect.TypeOf((*MockFooService)(nil).GetFoos))
}

// UpdateFoo mocks base method.
func (m *MockFooService) UpdateFoo(arg0 int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFoo", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFoo indicates an expected call of UpdateFoo.
func (mr *MockFooServiceMockRecorder) UpdateFoo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFoo", reflect.TypeOf((*MockFooService)(nil).UpdateFoo), arg0)
}
